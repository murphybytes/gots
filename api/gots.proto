syntax = "proto3";

package api;

// A single tick in a time series.
message Element {
    // Unix time in nanoseconds
    int64 timestamp = 1;
    bytes data = 2;
}

message Series {
    // Unique key that identify Elements from a particular source. For example, if we were dealing with stock quotes
    // a good key might be the ticker symbol.
    string key = 1;
    repeated Element elements = 2;
}

// SearchRequest can be used to add multiple series in one request.
message SearchRequest {
    // The unique key of the series we are after
    string key = 1;
    // The inclusive lower build timestamp of the timeseries elements we're interested in.
    uint64 oldest = 2;
    // The upper bound timestamp, all elements up to, but not including this timestamp will be included in the result
    // set.  Zero value means there is no upper bound.
    uint64 newest = 3;
}

// SearchResponse contains the requested series and a status code that describes the outcome of the request.
message SearchResponse {
    Series results = 1;
    enum Status {
        OK = 0;
        NOT_FOUND = 1;
        SERVER_ERROR = 2;
        NOT_AUTHORIZED = 3;
        INVALID_ARGUMENTS = 4;
    }
    Status status = 2;
}



service TimeseriesService {
    rpc Search(SearchRequest) returns (SearchResponse);
}